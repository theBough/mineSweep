Public Class Form1
    Dim grid(100, 100) As Button
    Dim generator As New Random
    Dim trueSize As Integer = 0
    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        trueSize = tbSize.Text
        makeGrid(tbSize.Text)
    End Sub
    Sub makeGrid(size As Integer)
        For x = 0 To size - 1
            For y = 0 To size - 1
                grid(x, y) = New Button
                With grid(x, y)
                    .Height = 20
                    .Width = 20
                    .Left = 100 + x * 20
                    .Top = 100 + y * 20
                End With
                Me.Controls.Add(grid(x, y))
            Next
        Next
        plantMines((size * size) / 5, size)
    End Sub
    Sub plantMines(numberOfMines As Integer, size As Integer)
        Dim rX As Integer = generator.Next(0, size)
        Dim rY As Integer = generator.Next(0, size)
        For i = 0 To numberOfMines
            While grid(rX, rY).Text = "O"
                rX = generator.Next(0, size)
                rY = generator.Next(0, size)
            End While
            grid(rX, rY).Text = "O"
        Next
        doTheCount(size)
    End Sub
    Sub doTheCount(size As Integer)
        For x = 0 To size - 1
            For y = 0 To size - 1
                If grid(x, y).Text <> "O" Then
                    grid(x, y).Text = checkAround(x, y)
                End If
            Next
        Next
    End Sub

#Region "check around Functions"
    
    Function checkAround(x As Integer, y As Integer)
        Dim count As Integer = 0
        If checkLeft(x, y) Then
            count += 1
        End If
        If checkRight(x, y) Then
            count += 1
        End If
        If checkUP(x, y) Then
            count += 1
        End If
        If checkDown(x, y) Then
            count += 1
        End If
        If checkDownLeft(x, y) Then
            count += 1
        End If
        If checkDownRight(x, y) Then
            count += 1
        End If
        If checkUpRight(x, y) Then
            count += 1
        End If
        If checkUpLeft(x, y) Then
            count += 1
        End If
        Return count
    End Function

    Function checkLeft(x As Integer, y As Integer)
        If x > 0 Then
            If (grid(x - 1, y).Text = "O") Then
                Return True
            End If
        End If
        Return False
    End Function
    Function checkRight(x As Integer, y As Integer)
        If x < trueSize - 1 Then
            If (grid(x + 1, y).Text = "O") Then
                Return True
            End If
        End If
        
        Return False
    End Function
    Function checkUP(x As Integer, y As Integer)
        If y > 0 Then
            If (grid(x, y - 1).Text = "O") Then
                Return True
            End If
        End If
        Return False
    End Function
    Function checkDown(x As Integer, y As Integer)
        If y < trueSize - 1 Then
            If (grid(x, y + 1).Text = "O") Then
                Return True
            End If
        End If
        Return False
    End Function
    Function checkUpLeft(x As Integer, y As Integer)
        If x > 0 And y > 0 Then
            If (grid(x - 1, y - 1).Text = "O") Then
                Return True
            End If
        End If
        Return False
    End Function
    Function checkUpRight(x As Integer, y As Integer)
        If x < trueSize - 1 And y > 0 Then
            If (grid(x + 1, y - 1).Text = "O") Then
                Return True
            End If
        End If
        Return False
    End Function
    Function checkDownLeft(x As Integer, y As Integer)
        If x > 0 And y < trueSize - 1 Then
            If (grid(x - 1, y + 1).Text = "O") Then
                Return True
            End If
        End If
        Return False
    End Function
    Function checkDownRight(x As Integer, y As Integer)
        If x < trueSize - 1 And y < trueSize - 1 Then
            If (grid(x + 1, y + 1).Text = "O") Then
                Return True
            End If
        End If
        Return False
    End Function
#End Region

   
End Class
